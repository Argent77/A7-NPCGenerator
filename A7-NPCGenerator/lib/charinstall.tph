INCLUDE ~%MOD_FOLDER%/lib/functions.tph~
INCLUDE ~%MOD_FOLDER%/lib/scripts.tph~

// Macro: Initializes potential meeting locations
// Registers detected games in the following variable:
// $supported_games: indexed array containing all detected games
// (numeric "supported_games" variable contains number of detected games)
DEFINE_ACTION_MACRO INIT_LOCATIONS
BEGIN
  OUTER_SET supported_games = 0
  ACTION_IF (GAME_INCLUDES ~bg1~) BEGIN
    OUTER_TEXT_SPRINT $supported_games(~%supported_games%~) ~BG1~
    OUTER_SET supported_games += 1
  END
  ACTION_IF (GAME_INCLUDES ~sod~) BEGIN
    OUTER_TEXT_SPRINT $supported_games(~%supported_games%~) ~SOD~
    OUTER_SET supported_games += 1
  END
  ACTION_IF (GAME_INCLUDES ~soa~) BEGIN
    OUTER_TEXT_SPRINT $supported_games(~%supported_games%~) ~SOA~
    OUTER_SET supported_games += 1
  END
  ACTION_IF (GAME_INCLUDES ~tob~) BEGIN
    OUTER_TEXT_SPRINT $supported_games(~%supported_games%~) ~TOB~
    OUTER_SET supported_games += 1
  END
  ACTION_IF (GAME_INCLUDES ~iwd~) BEGIN
    OUTER_TEXT_SPRINT $supported_games(~%supported_games%~) ~IWD~
    OUTER_SET supported_games += 1
  END

  ACTION_IF (supported_games = 0) BEGIN
    FAIL @504 // No supported game detected.
  END
END


// Macro: Installs all characters selected in the character selection menu.
// Requires the following variables to be initialized: $char_ref, $char_selected, $char_name
DEFINE_ACTION_MACRO INSTALL_CHARACTERS
BEGIN
  LOCAL_SET idx = 0
  LOCAL_SET are_x = 0
  LOCAL_SET are_y = 0
  LOCAL_SET are_dir = 0
  LOCAL_SET success = 0
  LOCAL_SPRINT filespec ~~
  LOCAL_SPRINT chr_resref ~~
  LOCAL_SPRINT directory ~~
  LOCAL_SPRINT name ~~
  LOCAL_SPRINT msg ~~

  // Quick sanity check
  ACTION_IF (NOT VARIABLE_IS_SET ~chr_folder~) BEGIN
    OUTER_SET chr_folder = 0
  END
  ACTION_IF (NOT VARIABLE_IS_SET ~char_selected~) BEGIN
    OUTER_SET char_selected = 0
  END
  ACTION_IF (NOT VARIABLE_IS_SET ~supported_games~) BEGIN
    OUTER_SET supported_games = 0
  END

  ACTION_IF (char_selected > 0) BEGIN
    LAF CREATE_AI_LIST_RESPONSES RET response_list ai_default_script ai_default_global RET_ARRAY response_list END
    ACTION_IF (NOT FILE_EXISTS_IN_GAME ~A7CHRNPC.DLG~) BEGIN
      // Generating ai script list for followers
      OUTER_TEXT_SPRINT responses_aiscript ~~
      OUTER_FOR (idx = 0; idx < response_list; ++idx) BEGIN
        OUTER_TEXT_SPRINT line $response_list(~%idx%~)
        OUTER_TEXT_SPRINT responses_aiscript ~%responses_aiscript%%WNL%%line%~
      END
      ACTION_IF (GAME_IS ~iwdee~) BEGIN
        COMPILE EVAL ~%MOD_FOLDER%/dialogs/a7chrnpc-iwdee.d~
      END ELSE BEGIN
        COMPILE EVAL ~%MOD_FOLDER%/dialogs/a7chrnpc.d~
      END
    END

    // Spell effect "Clear Fog of War" used in companion mode
    ACTION_IF (NOT FILE_EXISTS_IN_GAME ~A7CHRXV.SPL~) BEGIN
      // Non-EE games have to resort to secondary type removal
      ACTION_IF (NOT IS_EE) BEGIN
        LAF ADD_CUSTOM_SECTYPE STR_VAR name = ~A7CHR_CLEAR_FOW~ RET type END
      END
      COPY ~%MOD_FOLDER%/spells/a7chrxv.spl~ ~override~
        PATCH_IF (NOT IS_EE && type > 0) BEGIN
          WRITE_BYTE 0x27 type    // secondary type
        END
        LPF ADD_SPELL_EFFECT
          INT_VAR
            opcode = 268  // Clear Fog of War
            target = 2    // Preset target
            timing = IS_EE ? 9 : 1  // Work-around for non-EE games to make effect removable
        END
    END
    ACTION_IF (NOT FILE_EXISTS_IN_GAME ~A7CHRXV2.SPL~) BEGIN
      ACTION_IF (NOT IS_EE) BEGIN
        LAF GET_CUSTOM_SECTYPE STR_VAR name = ~A7CHR_CLEAR_FOW~ RET type END
      END
      COPY ~%MOD_FOLDER%/spells/a7chrxv2.spl~ ~override~
        PATCH_IF (NOT IS_EE && type > 0) BEGIN
          LPF ADD_SPELL_EFFECT
            INT_VAR
              opcode = 221  // Remove secondary type
              target = 2    // Preset target
              timing = 1    // Instant/Permanent until death
              parameter2 = type
          END
        END
        PATCH_IF (IS_EE) BEGIN
          LPF ADD_SPELL_EFFECT
            INT_VAR
              opcode = 321  // Remove effects by resource
              target = 2    // Preset target
              timing = 1    // Instant/Permanent until death
            STR_VAR
              resource = ~A7CHRXV~
          END
        END
    END

    // Don't auto-assign "MULTIG.DLG" to custom NPCs
    OUTER_SET add_bp = 0
    COPY_EXISTING ~dplayer3.bcs~ ~override~
      DECOMPILE_AND_PATCH BEGIN
        SET add_bp = (INDEX_BUFFER(~Global("A7CHR-CUSTOM","LOCALS"~) < 0)
        PATCH_IF (add_bp) BEGIN
          TEXT_SPRINT trigger ~Global("A7CHR-CUSTOM","LOCALS",0)%LNL%~
          SET trigger_len = STRING_LENGTH ~%trigger%~
          SET p1 = 0
          SET p2 = 0
          WHILE (p1 >= 0 && p2 >= p1) BEGIN
            SET p1 = INDEX_BUFFER(~"MULTIG"~ p2)
            PATCH_IF (p1 >= 0) BEGIN
              SET p1 = RINDEX_BUFFER(~^THEN$~ p1)
              PATCH_IF (p1 >= 0) BEGIN
                INSERT_BYTES p1 trigger_len
                WRITE_ASCIIE p1 ~%trigger%~ (trigger_len)
                SET p2 = INDEX_BUFFER(~^END$~ p1)
              END
            END
          END
        END
      END
    BUT_ONLY IF_EXISTS
    ACTION_IF (add_bp) BEGIN
      EXTEND_BOTTOM ~dplayer3.bcs~ ~.../inlined/a7-npcgenerator/breaking_point.baf~
    END

    ACTION_IF (NOT FILE_EXISTS_IN_GAME ~A7CHRNPC.BCS~) BEGIN
      COMPILE ~%MOD_FOLDER%/scripts/a7chrnpc.baf~ EVAL
      // use better method for setting character XP if available
      ACTION_IF (VALID_SCRIPT_ACTIONS ~ChangeStat(Myself,XP,0,SET)~) BEGIN
        COPY_EXISTING ~A7CHRNPC.BCS~ ~override~
          DECOMPILE_AND_PATCH BEGIN
            REPLACE_TEXTUALLY ~AddXPObject(Myself,\([0-9]+\))~ ~ChangeStat(Myself,XP,\1,SET)~
          END
        BUT_ONLY
      END
      ACTION_IF (GAME_INCLUDES ~soa~) BEGIN
        EXTEND_BOTTOM ~A7CHRNPC.BCS~ ~%MOD_FOLDER%/scripts/a7chr-plot-soa.baf~ EVAL
      END
      ACTION_IF (IS_EE) BEGIN
        ACTION_IF (GAME_INCLUDES ~sod~) BEGIN
          EXTEND_BOTTOM ~A7CHRNPC.BCS~ ~%MOD_FOLDER%/scripts/ee/a7chr-plot-sod.baf~
        END
        EXTEND_BOTTOM ~A7CHRNPC.BCS~ ~%MOD_FOLDER%/scripts/ee/a7chrxp-append.baf~
      END ELSE BEGIN
        EXTEND_BOTTOM ~A7CHRNPC.BCS~ ~%MOD_FOLDER%/scripts/a7chrxp-append.baf~
      END
    END

    // Installing NPCs
    OUTER_FOR (char_idx = 0; char_idx < char_ref; ++char_idx) BEGIN
      ACTION_IF (VARIABLE_IS_SET $char_selected(~%char_idx%~)) BEGIN
        // getting character info
        OUTER_TEXT_SPRINT filespec $char_ref(~%char_idx%~)
        LAF RES_OF_FILESPEC STR_VAR filespec RET chr_resref = res END
        LAF DIRECTORY_OF_FILESPEC STR_VAR filespec RET directory END
        LAF GET_SAFE_RESREF STR_VAR resref = EVAL ~%chr_resref%~ RET cre_resref = resref END
        OUTER_TEXT_SPRINT name $char_name(~%filespec%~)
        OUTER_SPRINT msg @60  // Installing character
        PRINT ~%msg% %name% (%chr_resref%.chr)~

        // installing CHR as CRE
        ACTION_IF (~%directory%~ STR_EQ ~~ && FILE_EXISTS_IN_GAME ~%filespec%~) BEGIN
          // assign biography if available
          OUTER_SET bio_strref = "-1"
          COPY_EXISTING ~%chr_resref%.BIO~ ~override~
            PATCH_IF (SOURCE_SIZE > 0) BEGIN
              READ_ASCII 0 text (SOURCE_SIZE)
              SET bio_strref = RESOLVE_STR_REF(~%text%~)
            END
          BUT_ONLY IF_EXISTS

          COPY_EXISTING ~%filespec%~ ~override/%cre_resref%.cre~
            LPF INSTALL_CHR_AS_CRE INT_VAR adapt_xp bio_strref STR_VAR script_name = EVAL ~A7CHR-%cre_resref%~ END
        END ELSE BEGIN
          OUTER_FOR (i = 0; i < chr_folder; ++i) BEGIN
            OUTER_TEXT_SPRINT folder $chr_folder(~%i%~)

            // assign biography if available
            OUTER_SET bio_strref = "-1"
            COPY ~%folder%/%chr_resref%.bio~ ~override~
              PATCH_IF (SOURCE_SIZE > 0) BEGIN
                READ_ASCII 0 text (SOURCE_SIZE)
                SET bio_strref = RESOLVE_STR_REF(~%text%~)
              END
            BUT_ONLY IF_EXISTS

            COPY ~%folder%/%chr_resref%.chr~ ~override/%cre_resref%.cre~
              LPF INSTALL_CHR_AS_CRE INT_VAR adapt_xp bio_strref STR_VAR script_name = EVAL ~A7CHR-%cre_resref%~ END
            IF_EXISTS

            // handling epilogue
            ACTION_IF (GAME_IS ~tob bgt bg2ee eet~) BEGIN
              OUTER_SET epilogue_strref1 = "-1"
              OUTER_SET epilogue_strref2 = "-1"
              ACTION_IF (FILE_EXISTS ~%folder%/%chr_resref%.ep1~ && FILE_EXISTS ~%folder%/%chr_resref%.ep2~) BEGIN
                // separate epilogues for ascension and mortal conclusion
                COPY ~%folder%/%chr_resref%.ep1~ ~override~
                  PATCH_IF (SOURCE_SIZE > 0) BEGIN
                    READ_ASCII 0 text (SOURCE_SIZE)
                    SET epilogue_strref1 = RESOLVE_STR_REF(~%text%~)
                  END
                BUT_ONLY IF_EXISTS
                COPY ~%folder%/%chr_resref%.ep2~ ~override~
                  PATCH_IF (SOURCE_SIZE > 0) BEGIN
                    READ_ASCII 0 text (SOURCE_SIZE)
                    SET epilogue_strref2 = RESOLVE_STR_REF(~%text%~)
                  END
                BUT_ONLY IF_EXISTS
              END ELSE ACTION_IF (FILE_EXISTS ~%folder%/%chr_resref%.epi~) BEGIN
                // unified epilogue for both outcomes
                COPY ~%folder%/%chr_resref%.epi~ ~override~
                  PATCH_IF (SOURCE_SIZE > 0) BEGIN
                    READ_ASCII 0 text (SOURCE_SIZE)
                    SET epilogue_strref1 = RESOLVE_STR_REF(~%text%~)
                  END
                BUT_ONLY IF_EXISTS
              END

              LAF INSTALL_EPILOGUE INT_VAR epilogue_strref1 epilogue_strref2 STR_VAR cre_resref END
            END
          END
        END

        // setting up character creation
        OUTER_SET move_stage = 1
        OUTER_FOR (game_idx = 0; game_idx < supported_games; ++game_idx) BEGIN
          OUTER_TEXT_SPRINT game $supported_games(~%game_idx%~)
          OUTER_SET loc_idx = 0
          OUTER_WHILE (loc_idx >= 0) BEGIN
            // retrieving set of areas to set up as potential meeting point
            LAF GET_GAME_AREAS
              INT_VAR loc_idx
              STR_VAR game
              RET areas
              RET_ARRAY areas
            END

            ACTION_IF (areas > 0) BEGIN
              // adding NPCs to area(s)
              OUTER_SET are_idx = (areas > 1) ? RANDOM(0 (areas - 1)) : 0
              OUTER_TEXT_SPRINT are_resref $areas(~%are_idx%~)
              LAF GET_AREA_SCRIPT
                STR_VAR are_resref
                RET are_script
              END

              LAF GET_FREE_NPC_POSITION
              STR_VAR game are_resref
              RET
                are_x = x
                are_y = y
                are_dir = dir
              END

              OUTER_TEXT_SPRINT extra_trigger ~~
              ACTION_IF (~%game%~ STR_EQ ~IWD~) BEGIN
                ACTION_IF (~%are_resref%~ STR_EQ ~AR1006~) BEGIN
                  // IWD special: Delay NPC creation until stepping out of opening tavern and in again
                  LAF GET_AREA_SCRIPT
                    STR_VAR are_resref = ~AR1000~
                    RET ar1000_script = are_script
                  END
                  ACTION_IF (NOT FILE_CONTAINS_EVALUATED(~%ar1000_script%.BCS~ ~"GLOBALA7CHR-INIT-ENABLED"~)) BEGIN
                    // Add only once to area script
                    EXTEND_TOP ~%ar1000_script%.BCS~ ~.../inlined/a7-npcgenerator/init_enable.baf~
                  END
                  OUTER_TEXT_SPRINT extra_trigger ~!Global("A7CHR-INIT-ENABLED","GLOBAL",0) AreaCheckObject("%are_resref%",Player1)~
                END ELSE ACTION_IF (~%are_resref%~ STR_EQ ~AR9101~ || ~%are_resref%~ STR_EQ ~AR9102~) BEGIN
                  // IWD special: Only available if game started in HOW campaign
                  OUTER_TEXT_SPRINT extra_trigger ~GlobalGT("Chapter","GLOBAL",6)~
                END
              END

              ACTION_IF (NOT FILE_CONTAINS_EVALUATED(~%are_script%.BCS~ ~"GLOBALA7CHR-MOVESTAGE"~)) BEGIN
                // Add only once to area script
                EXTEND_TOP ~%are_script%.BCS~ ~.../inlined/a7-npcgenerator/move_init.baf~ EVAL
              END
              EXTEND_TOP ~%are_script%.BCS~ ~.../inlined/a7-npcgenerator/create_script.baf~ EVAL
              EXTEND_TOP ~%are_script%.BCS~ ~.../inlined/a7-npcgenerator/move_script.baf~ EVAL
              EXTEND_BOTTOM ~A7CHRNPC.BCS~ ~.../inlined/a7-npcgenerator/npc_return_script.baf~ EVAL

              LAF REGISTER_CHAR
                INT_VAR are_x are_y are_dir
                STR_VAR game cre_resref are_resref script_name = EVAL ~A7CHR-%cre_resref%~
                RET success
              END

              OUTER_SET loc_idx += 1
              OUTER_SET move_stage += 1
            END ELSE BEGIN
              OUTER_SET loc_idx = "-1"
            END
          END
        END
      END
    END
  END
END


// Prepares current CHR/CRE file to be used as custom NPC
DEFINE_PATCH_FUNCTION INSTALL_CHR_AS_CRE
INT_VAR
  adapt_xp = 0  // whether to activate XP adaptation
  bio_strref = "-1" // strref of an optional biography text
STR_VAR
  script_name = ~~
BEGIN
  // initializations
  PATCH_IF (IS_EE) BEGIN
    SET bio_exclude_min = 3000000 // start of non-static strrefs
    SET bio_exclude_max = 0x7fffffff
  END ELSE BEGIN
    SET bio_exclude_min = 62016 // reserved string for placeholder text
    SET bio_exclude_max = 62016
  END

  PATCH_IF (~%script_name%~ STR_EQ ~~ && VARIABLE_IS_SET ~SOURCE_RES~) BEGIN
    TEXT_SPRINT script_name ~A7CHR-%SOURCE_RES%~
  END
  READ_ASCII 0 sig (4)
  PATCH_IF (~%sig%~ STR_EQ ~CHR ~) BEGIN
    READ_ASCII 0x8 chr_name (32) NULL
    SET name_strref = RESOLVE_STR_REF(~%chr_name%~)
    DELETE_BYTES 0 0x64
    WRITE_LONG NAME1 name_strref
    WRITE_LONG NAME2 name_strref
    WRITE_LONG BIO ((bio_strref >= 0 || (THIS >= bio_exclude_min && THIS <= bio_exclude_max)) ? bio_strref : THIS)
    WRITE_BYTE 0x270 128 // Allegiance = NEUTRAL
    WRITE_ASCII DIALOG ~A7CHRNPC~ (8)
    WRITE_ASCII SCRIPT_OVERRIDE ~A7CHRNPC~ (8)
    WRITE_ASCII SCRIPT_DEFAULT ~~ (8)
    WRITE_ASCIIE DEATHVAR ~%script_name%~ (32)
    LPF ADD_LOCAL_VARIABLE INT_VAR value = 1 STR_VAR name = ~A7CHR-CUSTOM~ END

    // removing invalid kit
    SET TRUECLASS = 0x4000
    SET kit_value = ((SHORT_AT 0x244) << 16) | (SHORT_AT 0x246)
    PATCH_IF (kit_value != TRUECLASS) BEGIN
      LOOKUP_IDS_SYMBOL_OF_INT kit_symbol ~kit~ kit_value
      PATCH_IF (~%kit_symbol%~ STR_EQ ~%kit_value%~) BEGIN
        SET kit_value = TRUECLASS
        WRITE_SHORT 0x244 (kit_value >> 16) & 0xffff
        WRITE_SHORT 0x246 kit_value & 0xffff
      END
    END

    // removing invalid known and memorized spells
    READ_LONG 0x2a0 ofs_known
    READ_LONG 0x2a4 num_known
    SET spells = 0
    FOR (idx = 0; idx < num_known; ++idx) BEGIN
      SET ofs = ofs_known + idx * 12
      READ_ASCII ofs resref (8) NULL
      PATCH_IF (STRING_LENGTH ~%resref%~ > 0 && NOT FILE_EXISTS_IN_GAME ~%resref%.SPL~) BEGIN
        TEXT_SPRINT $spells(~%spells%~) ~%resref%~
        SET spells += 1
      END
    END
    FOR (idx = 0; idx < spells; ++idx) BEGIN
      TEXT_SPRINT resref $spells(~%idx%~)
      REMOVE_MEMORIZED_SPELL ~%resref%~
      REMOVE_KNOWN_SPELL ~%resref%~
    END

    // removing invalid items
    READ_LONG 0x2bc ofs_items
    READ_LONG 0x2c0 num_items
    SET items = 0
    FOR (idx = 0; idx < num_items; ++idx) BEGIN
      SET ofs = ofs_items + idx * 20
      READ_ASCII ofs resref (8) NULL
      PATCH_IF (STRING_LENGTH ~%resref%~ > 0 && NOT FILE_EXISTS_IN_GAME ~%resref%.ITM~) BEGIN
        TEXT_SPRINT $items(~%items%~) ~%resref%~
        SET items += 1
      END
    END
    FOR (idx = 0; idx < items; ++idx) BEGIN
      TEXT_SPRINT resref $items(~%idx%~)
      REMOVE_CRE_ITEM ~%resref%~
    END

    // removing invalid effects
    PATCH_IF ((BYTE_AT 0x33) = 1) BEGIN // check only effect v2 entries
      READ_LONG 0x2c4 ofs_fx
      READ_LONG 0x2c8 num_fx
      SET fx_size = 264
      SET num_deleted = 0
      FOR (idx = num_fx - 1; idx >= 0; --idx) BEGIN
        SET ofs = ofs_fx + idx * fx_size
        READ_ASCII (ofs + 0x8c) resref (8) NULL
        PATCH_IF (STRING_LENGTH ~%resref%~ > 0 && NOT ~%resref%~ STR_EQ ~NONE~ && NOT FILE_EXISTS_IN_GAME ~%resref%.SPL~) BEGIN
          DELETE_BYTES ofs fx_size
          SET num_deleted += 1
        END
      END
      PATCH_IF (num_deleted > 0) BEGIN
        // updating effects count
        WRITE_LONG 0x2c8 (num_fx - num_deleted)
        // updating offsets
        SET bytes_removed = num_deleted * fx_size
        PATCH_FOR_EACH ofs IN ~0x2a0~ ~0x2a8~ ~0x2b0~ ~0x2b8~ ~0x2bc~ BEGIN
          WRITE_LONG ofs ((THIS > ofs_fx) ? (THIS - bytes_removed) : THIS)
        END
      END
    END

    // resetting CRE experience
    PATCH_IF (adapt_xp) BEGIN
      WRITE_LONG 0x18 0
      LPF ADD_LOCAL_VARIABLE INT_VAR value = 1 STR_VAR name = ~A7CHR-ADAPT-XP~ END
      // Precaution: opcode may mess with XP adaptation
      LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete = 104 END  // XP bonus
    END
  END
END


// Adds local script block to disable initial alignment check when recruiting custom NPCs.
DEFINE_ACTION_FUNCTION ADD_DISABLED_ALIGNMENT_CHECK
BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~a7chrnpc.bcs~) BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~a7chrnpc.bcs~ &&
               NOT FILE_CONTAINS_EVALUATED(~a7chrnpc.bcs~ ~LOCALSA7CHR-SKIPCHECK_CHECKED~)) BEGIN
      EXTEND_TOP ~a7chrnpc.bcs~ ~.../inlined/a7-npcgenerator/npc_disable_alignment_check.baf~
    END
  END
END

// Removes local script block to disable initial alignment check when recruiting custom NPCs.
DEFINE_ACTION_FUNCTION REMOVE_DISABLED_ALIGNMENT_CHECK
BEGIN
  COPY_EXISTING ~a7chrnpc.bcs~ ~override~
    PATCH_IF (INDEX_BUFFER(~LOCALSA7CHR-SKIPCHECK_CHECKED~) >= 0) BEGIN
      DECOMPILE_AND_PATCH BEGIN
        SET p1 = INDEX_BUFFER(~Global("A7CHR-SKIPCHECK_CHECKED","LOCALS",0)~)
        PATCH_IF (p1 >= 0) BEGIN
          SET p1 = RINDEX_BUFFER(~^IF$~ p1)
          PATCH_IF (p1 >= 0) BEGIN
            SET p2 = INDEX_BUFFER(~^END$~ p1)
            PATCH_IF (p2 > p1) BEGIN
              DELETE_BYTES p1 (p2 - p1 + 3)
            END
          END
        END
      END
    END
  BUT_ONLY IF_EXISTS
END

// Installs epilogues for the specified NPC
DEFINE_ACTION_FUNCTION INSTALL_EPILOGUE
INT_VAR
  epilogue_strref1 = "-1"
  epilogue_strref2 = "-1"
STR_VAR
  cre_resref = ~~
BEGIN
  ACTION_IF (FILE_EXISTS_IN_GAME ~%cre_resref%.CRE~ && epilogue_strref1 >= 0) BEGIN
    ACTION_CLEAR_ARRAY ~portrait_folders~
    OUTER_TEXT_SPRINT $portrait_folders(~0~) ~portraits~
    OUTER_SET portrait_folders = 1
    ACTION_IF (IS_EE) BEGIN
      OUTER_TEXT_SPRINT $portrait_folders(~1~) ~%USER_DIRECTORY%/portraits~
      OUTER_SET portrait_folders += 1
    END

    // initializing epilogue
    ACTION_IF (epilogue_strref2 < 0 || epilogue_strref1 = epilogue_strref2) BEGIN
      // unified epilogue
      OUTER_SET num_epilogues = 1

      OUTER_SET $epi_strrefs(~0~) = epilogue_strref1
      OUTER_TEXT_SPRINT $epi_triggers(~0~) ~~
    END ELSE BEGIN
      // event-specific epilogues
      OUTER_SET num_epilogues = 2

      OUTER_SET $epi_strrefs(~0~) = epilogue_strref1
      OUTER_TEXT_SPRINT $epi_triggers(~0~) ~Global("PlayerChoseEssence","GLOBAL",1)~

      OUTER_SET $epi_strrefs(~1~) = epilogue_strref2
      OUTER_TEXT_SPRINT $epi_triggers(~1~) ~Global("PlayerChoseEssence","GLOBAL",0)~
    END

    COPY_EXISTING ~%cre_resref%.CRE~ ~override~
      // getting portrait resref (%portrait_res%)
      READ_ASCII 0x3c portrait_res (8) NULL
      SET found = NOT ~%portrait_res%~ STR_EQ ~~ && FILE_EXISTS_IN_GAME ~%portrait_res%.BMP~
      PATCH_IF (NOT found) BEGIN
        PATCH_PHP_EACH portrait_folders AS _ => folder BEGIN
          PATCH_IF (NOT found) BEGIN
            SET found = FILE_EXISTS ~%folder%/%portrait_res%.BMP~
          END
        END
      END
      PATCH_IF (NOT found) BEGIN
        READ_ASCII 0x34 portrait_res (8) NULL
        SET found = NOT ~%portrait_res%~ STR_EQ ~~ && FILE_EXISTS_IN_GAME ~%portrait_res%.BMP~
        PATCH_IF (NOT found) BEGIN
          PATCH_PHP_EACH portrait_folders AS _ => folder BEGIN
            PATCH_IF (NOT found) BEGIN
              SET found = FILE_EXISTS ~%folder%/%portrait_res%.BMP~
            END
          END
        END
      END
      PATCH_IF (NOT found) BEGIN
        TEXT_SPRINT portrait_res ~NOPORTLG~
      END

      // getting CRE script name (%script_name%)
      READ_ASCII DEATHVAR script_name (32) NULL
    BUT_ONLY

    // installing epilogues
    OUTER_FOR (i = 0; i < num_epilogues; ++i) BEGIN
      OUTER_SET suffix = i + 1
      LAF GET_UNIQUE_RESREF
        STR_VAR
          base_resref = EVAL ~%cre_resref%~
          base_suffix = EVAL ~%suffix%~
          extension = ~2da~
        RET
          resref
      END

      ACTION_IF (NOT ~%resref%~ STR_EQ ~~) BEGIN
        // installing epilogue text file
        OUTER_TEXT_SPRINT epilogue_resref ~%resref%~
        OUTER_SET epi_strref = $epi_strrefs(~%i%~)
        COPY ~%MOD_FOLDER%/2da/epilogue.2da~ ~override/%epilogue_resref%.2da~ EVAL

        // appending script
        OUTER_TEXT_SPRINT choice_trigger $epi_triggers(~%i%~)
        EXTEND_TOP ~AR6200.BCS~ ~%MOD_FOLDER%/scripts/a7chr-epilogue-tob.baf~ EVAL
      END ELSE BEGIN
        WARN ~Could not install epilogue %suffix% for %cre_resref%.~
      END
    END
  END
END
